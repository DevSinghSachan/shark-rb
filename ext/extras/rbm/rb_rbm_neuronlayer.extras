template<class Obtype, class NeuronType>
VALUE method_rbm_get_visible_neurons(VALUE self) {
	Obtype *m;
	Data_Get_Struct(self, Obtype, m);
	return wrap_pointer<NeuronType>(
		NeuronType::rb_class(),
		new NeuronType(&(m->getModel()->visibleNeurons()))
		);
}

template<class Obtype, class NeuronType>
VALUE method_rbm_get_hidden_neurons(VALUE self) {
	Obtype *m;
	Data_Get_Struct(self, Obtype, m);
	return wrap_pointer<NeuronType>(
		NeuronType::rb_class(),
		new NeuronType(&(m->getModel()->hiddenNeurons()))
		);
}

template<class RbmType, class VisibleNeuronType, class HiddenNeuronType>
void Init_RBMNeurons() {
	rb_define_method(RbmType::rb_class(), "hidden_neurons", (rb_method) method_rbm_get_hidden_neurons<RbmType,HiddenNeuronType>, 0);
	rb_define_method(RbmType::rb_class(), "visible_neurons", (rb_method) method_rbm_get_visible_neurons<RbmType,VisibleNeuronType>, 0);
}